import java.util.Arrays; 

public class CompareStuff2{

    public static void main(String[] args) {

        Student a = new Student("John", 0); 
        Student b = new Student("Sammy", 55); 

        System.out.println(a.compareTo(b)); 
        System.out.println(b.compareTo(a)); 
        System.out.println(a.compareTo(a)); 
    
        Student[] array = new Student[4]; 
        array[0] = a; 
        array[1] = b; 
        array[2] = new Student("Igor", 85);
        array[3] = new Student("Mork", 1); 

        Arrays.sort(array); 

        for(Student i: array){
            System.out.println(i); 
        }

        int loc = BinarySearchGeneric.binarySearch(array, a); 
        System.out.println(a + " appears at " + loc);

    }

}

 public class Student implements Comparable<Student>{ 

    private String name; 
    private int final_score; 

    public Student(String name, int grade){
        this.name = name; 
        final_score = grade; 

    }

    public String toString(){
        return name + ": " + final_score; 

    }

    public int compareTo(Student other){

        return final_score - other.final_score; 
    }

}

public class BinarySearchGeneric{

    //public driver
    public static <E extends Comparable<E>> 

        int binarySearch(E[] a, E x){

            return binarySearch(a, x, 0, a.length-1);

        }

    //recursive method
    private static <E extends Comparable<E>> 
        int binarySearch(E[] a, E x, int start, int stop){

            if(start>stop){
                return -1; 
            }

            int mid = (start+stop)/2; 

            int result = a[mid].compareTo(x); 

            if(result>0){
                //lower half 
                return binarySearch(a, x, start, mid-1);
            } else if(result<0){
                //upper half 
                return binarySearch(a, x, mid+1, stop);
            } else { 
                return mid;
            }

    }


}
