public class BinarySearch{

    public static int binarySearch(int[] a, int x){

       int low = 0; 
       int high = a.length - 1; 

       int mid; 

       while(low<=high) {

         mid=(low+high)/2;
         // mid = low + ((high-low)/2); // won't overflow

         if(x > a[mid]){
          //a[mid] is smalller, so x is larger
          low = mid + 1; 
         }else if(a < a[mid]){
           //a[mid] is larger, so x is smalller
           high = mid - 1;
         } else{
           return mid;
         }

       } 

    }

}

/** BS Tester 
import java.util.Arrays;

public class BSTester{

  public static void main(String[] args){

    int[] numbers = {3, 7, 2, 1, 5, 6};

    Array.sort(numbers);

    for(int i: numbers){
      System.out.println(i); 
    }

    int loc = BinaraySearch.binarySearch(numbers,5); 
    System.out.println("5 appears at " + loc)
    int loc = BinaraySearch.binarySearch(numbers,8); 
    System.out.println("8 appears at " + loc)
  }

}
